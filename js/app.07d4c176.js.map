{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?8d45","webpack:///./src/App.vue?a3d5","webpack:///./src/engine/components/render/renderComponent.ts","webpack:///./src/engine/components/world/positionComponent.ts","webpack:///./src/engine/components/render/bloomRenderComponent.ts","webpack:///./src/engine/renderer.ts","webpack:///./src/engine/entities/ship.ts","webpack:///./src/engine/components/world/velocityComponent.ts","webpack:///./src/engine/components/selection/selectableComponent.ts","webpack:///./src/engine/components/selection/shipSelectableComponent.ts","webpack:///./src/engine/state/flightComputer/FlightComputerAcceleratingState.ts","webpack:///./src/engine/state/flightComputer/FlightComputerStationaryState.ts","webpack:///./src/engine/state/flightComputer/FlightComputerTerminatingVelocityState.ts","webpack:///./src/engine/components/ship/flightComputerComponent.ts","webpack:///./src/engine/entities/ship/nameList.ts","webpack:///./src/engine/components/ship/healthComponent.ts","webpack:///./src/engine/components/ship/LoadoutComponent.ts","webpack:///./src/eventBus.ts","webpack:///./src/engine/class/weapon.ts","webpack:///./src/engine/class/laserWeapon.ts","webpack:///./src/engine/scalingHelper.ts","webpack:///./src/engine/factories/shipFactory.ts","webpack:///./src/engine/systems/velocityApplicationSystem.ts","webpack:///./src/components/shaders/ShaderLoader.vue?b4a6","webpack:///src/components/shaders/ShaderLoader.vue","webpack:///./src/components/shaders/ShaderLoader.vue?3fa8","webpack:///./src/components/shaders/ShaderLoader.vue","webpack:///./src/engine/entities/star.ts","webpack:///./src/engine/components/render/starRenderComponent.ts","webpack:///./src/engine/factories/starFactory.ts","webpack:///./src/engine/factories/geometry/circleGeometryFactory.ts","webpack:///./src/engine/systems/cameraControlSystem.ts","webpack:///./src/engine/systems/input/selectionHelper.ts","webpack:///./src/engine/factories/material/lineMaterialFactory.ts","webpack:///./src/engine/components/render/selectionMarkerRenderComponent.ts","webpack:///./src/engine/class/marker/selectionMarkerTracker.ts","webpack:///./src/engine/systems/entitySelectionSystem.ts","webpack:///./src/engine/systems/shipMovementControlSystem.ts","webpack:///./src/engine/systems/flightComputerProcessorSystem.ts","webpack:///./src/engine.ts","webpack:///./src/engine/systems/input/WorldMouseEvent.ts","webpack:///./src/engine/systems/userInputSystem.ts","webpack:///./src/engine/systems/automatedFiringSystem.ts","webpack:///./src/engine/entities/weapon/laserBeam.ts","webpack:///./src/engine/factories/weapon/instance/laserBeamInstanceFactory.ts","webpack:///./src/engine/systems/combat/weapons/laserHandlingSystem.ts","webpack:///./src/engine/systems/combat/healthMonitoringSystem.ts","webpack:///./src/engine/factories/sprite/backgroundSpriteFactory.ts","webpack:///./src/App.vue?5dd0","webpack:///./src/App.vue?aea5","webpack:///./src/App.vue","webpack:///./src/components/Overview.vue?c6fc","webpack:///./src/components/Overview.vue?a154","webpack:///./src/components/Overview.vue?89f8","webpack:///./src/components/Overview.vue","webpack:///./src/router.ts","webpack:///./src/store.ts","webpack:///./src/registerServiceWorker.ts","webpack:///./src/plugins/vuetify.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","mesh","Error","delta","camera","tag","position","copy","mountElement","scene","starScene","innerWidth","innerHeight","set","lookAt","renderer","setPixelRatio","devicePixelRatio","setSize","autoClear","composer","EffectComposer","appendChild","domElement","renderRegular","RenderPass","clear","renderModel","effectBloom","UnrealBloomPass","threshold","strength","radius","outputPass","ShaderPass","CopyShader","renderToScreen","clearPass","ClearPass","addPass","onresize","aspect","updateProjectionMatrix","entity","hasComponent","renderComponent","getComponent","add","getMesh","remove","engine","addEntityListener","family","include","build","entities","positionComponent","getPosition","update","render","_name","_team","_mass","_enginePower","velocity","acceleration","selectionIndicatorObject","selected","onSelection","onDeselection","console","log","target","getTarget","enginePower","mass","thrustVector","sub","normalize","multiplyScalar","setAcceleration","getVelocity","displacement","distanceTo","maxThrustInOppositeDirection","displacementRequiredToStop","lengthSq","hasTarget","velocityComponent","requiredThrustNormal","flightComputer","setTarget","state","onEnter","newState","handleNewTarget","setState","onExit","_hull","_shields","shields","hull","_weapons","EventBus","_damage","_accuracy","_range","_cooldown","lastFired","Date","now","cooldown","attacker","defender","variance","Math","random","accuracy","laserFiredEvent","source","destination","colour","team","$emit","damage","AU","sunRadius","solOrbitDistances","mercury","venus","earth","mars","jupiter","saturn","neptune","pluto","gamePacing","speedOfLight","id","type","ship","floor","putComponent","initialise","createBattleship","createBattlecruiser","createDestroyer","geometry","rotateX","PI","material","color","loadout","weapon","weapons","fastLaser","newVelocity","getAcceleration","setVelocity","movement","newPosition","setPosition","_m","_v","component","uniforms","time","size","vertexElement","document","getElementById","vertexShader","textContent","fragmentElement","fragmentShader","textureLoader","fogDensity","fogColor","uvScale","texture1","load","texture2","wrapS","wrapT","getStarScene","rotation","z","addEntity","segments","LineGeometry","vertices","colours","theta","cos","sin","setPositions","setColors","inputSystem","speed","y","isKeyPressed","x","lerp","event","onMouseWheel","multiplier","deltaY","mouseIntersection","planeIntersectionPoint","centerIntersection","centerPlaneIntersectionPoint","selectionBox","cssClassName","element","createElement","classList","style","pointerEvents","startPoint","pointTopLeft","pointBottomRight","isDown","addEventListener","button","onSelectStart","onSelectMove","onSelectOver","body","left","clientX","top","clientY","width","height","max","min","parentElement","removeChild","lineWidth","dashScale","gapSize","LineMaterial","linewidth","dashed","defines","USE_DASH","resolution","rotateY","distance","selectionMarkerMap","Map","onEntityDeselection","has","createCircleGeometry","buildDottedMaterial","line","Line2","computeLineDistances","scale","selectionMarker","setPositionReference","getPositionReference","markerEntity","removeEntity","delete","selectionGroups","selectables","SelectionBox","selectionHelper","selectionMarkerTracker","onMouseClick","startSelection","onMouseMove","onKeyDown","deselectEntity","isNaN","Number","preventDefault","createNewGroup","selectGroup","group","filter","isSelected","unselectAllSelected","forEach","selectEntity","isMousePressed","endPoint","allSelected","select","obj","intersects","raycaster","intersectObjects","children","selectedObject","selectableComponent","onEntitySelection","deselect","onRightClick","lead","selectable","intersect","leadPosition","offset","flightComputerFamily","_button","_position","_intersect","_raycaster","Event","plane","mouse","eventListeners","keymap","mousemap","_planeIntersectionPoint","_centerPlaneIntersectionPoint","onClick","onWheelEvent","onMouseDown","onMouseUp","onKeyUp","onblur","oncontextmenu","listener","toLowerCase","dispatch","recalculatePlaneIntersections","worldMouseEvent","eventListener","onInputEvent","setFromCamera","ray","intersectPlane","targetTeams","1","2","3","loadoutFamily","includes","fireWeapons","canFire","defenderPosition","attackerPosition","distanceToSquared","range","fire","firedAt","lifetime","buildSolidMaterial","laserBeams","$on","laser","isExpired","healthComponent","textureName","bgTexture","repeat","addSystem","shipFactory","createShip","createStar","values","geo","getScene","getCamera","getRenderer","entitySelectionSystem","shipMovementControlSystem","cameraControl","laserHandlingSystem","healthMonitoringSystem","starBackground","createBackgroundSprite","background","earthRadius","clock","animate","getDelta","requestAnimationFrame","removeSystems","_systems","components","ShaderLoader","VApp","VRow","VSpacer","use","base","routes","path","Store","selectedShips","mutations","actions","getters","ready","registered","cached","updatefound","updated","offline","error","icons","iconfont","config","productionTip","router","store","vuetify","h","created","$vuetify","theme","dark","$mount"],"mappings":"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OAAOvG,KAAKiD,QACvBjD,KAAKkG,MAAQA,EAEblG,KAAKkG,MAAMC,QAAQnG,KAAKiD,Y,KC1DjB,GACX,OACA,YACA,aACA,QACA,aACA,YACA,WACA,YACA,SACA,WACA,QACA,YACA,SACA,UACA,YACA,SACA,WACA,QACA,SACA,WACA,UACA,YACA,YACA,UACA,QACA,aACA,UACA,WACA,SACA,WACA,aACA,YACA,WACA,YACA,WACA,YACA,aACA,WACA,WACA,WACA,WACA,SACA,cACA,cACA,YACA,gBACA,YACA,cACA,WACA,cACA,YACA,WACA,aACA,SACA,SACA,WACA,SACA,UACA,WACA,YACA,WACA,UACA,UACA,UACA,YACA,QACA,UACA,SACA,UACA,UACA,UACA,YACA,WACA,QACA,cACA,UACA,aACA,WACA,UACA,aACA,WACA,WACA,WACA,WACA,YACA,YACA,SACA,YACA,WACA,SACA,OACA,WACA,YACA,WACA,YACA,YACA,WACA,YACA,QACA,aACA,YACA,WACA,WACA,UACA,WACA,YACA,aACA,UACA,UACA,YC5GE,E,WAAN,oCACY,KAAAuD,MAAmB,IACnB,KAAAC,SAAmB,I,sDAmBb1H,GACNiB,KAAK0G,QAAU3H,GACfA,GAASiB,KAAK0G,QACd1G,KAAK0G,QAAU,GAEf1G,KAAK0G,SAAW3H,EAGpBiB,KAAK2G,MAAQ5H,I,2BAvBb,OAAOiB,KAAKwG,O,aAGAzH,GACZiB,KAAKwG,MAAQzH,I,8BAIb,OAAOiB,KAAKyG,U,aAGG1H,GACfiB,KAAKyG,SAAW1H,M,KCjBlB,E,WAAN,oCACY,KAAA6H,SAA0B,G,uDAI9B,OAAO5G,KAAK4G,U,aAGG7H,GACfiB,KAAK4G,SAAW7H,M,KCVlB8H,EAAW,IAAI,OCAN,E,qCCMT,E,YAGF,WAAsBC,EACAC,EACAC,EACAC,GAAiB,oCACnC,oDAJkB,EAAAH,UACA,EAAAC,YACA,EAAAC,SACA,EAAAC,YALZ,EAAAC,UAAoB,EAKS,E,6EAqCnC,OAAQC,KAAKC,MAAQpH,KAAKkH,UAAalH,KAAKqH,W,2BAGpCC,EAAkBC,G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","file":"js/app.07d4c176.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('v-app',{attrs:{\"theme\":\"dark\"}},[_c('router-view'),_c('shader-loader'),_c('div',{attrs:{\"id\":\"renderer\"}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import {Component} from '@nova-engine/ecs';\r\nimport {Camera, Mesh} from 'three';\r\n\r\nclass RenderComponent implements Component {\r\n    public static tag = 'RenderComponent';\r\n\r\n    public uniforms: any;\r\n\r\n    public mesh!: Mesh;\r\n\r\n    public getMesh(): Mesh {\r\n        if (!this.mesh) {\r\n            throw new Error('No mesh defined');\r\n        }\r\n\r\n        return this.mesh;\r\n    }\r\n\r\n    public update(delta: number, camera: Camera): void {\r\n\r\n    }\r\n}\r\n\r\nexport {RenderComponent};\r\n","import {Component} from '@nova-engine/ecs';\r\nimport {Vector3} from 'three';\r\n\r\nclass PositionComponent implements Component {\r\n\r\n    private position: Vector3 = new Vector3();\r\n\r\n    public getPosition(): Vector3 {\r\n        return new Vector3().copy(this.position);\r\n    }\r\n\r\n    public setPosition(value: Vector3) {\r\n        this.position.copy(value);\r\n    }\r\n\r\n    public setPositionReference(position: Vector3): void {\r\n        this.position = position;\r\n    }\r\n\r\n    public getPositionReference(): Vector3 {\r\n        return this.position;\r\n    }\r\n}\r\n\r\nexport {PositionComponent};\r\n","import {RenderComponent} from '@/engine/components/render/renderComponent';\r\n\r\nclass BloomRenderComponent extends RenderComponent {\r\n\r\n}\r\n\r\nexport {BloomRenderComponent};\r\n","import * as THREE from 'three';\r\nimport {Camera, PerspectiveCamera, Scene, Vector3, WebGLRenderer} from 'three';\r\nimport {Engine, EngineEntityListener, Entity, Family, FamilyBuilder, System} from '@nova-engine/ecs';\r\nimport {RenderComponent} from '@/engine/components/render/renderComponent';\r\nimport {PositionComponent} from '@/engine/components/world/positionComponent';\r\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport {ClearPass} from 'three/examples/jsm/postprocessing/ClearPass';\r\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\r\nimport {CopyShader} from 'three/examples/jsm/shaders/CopyShader';\r\nimport {UnrealBloomPass} from 'three/examples/jsm/postprocessing/UnrealBloomPass';\r\nimport {BloomRenderComponent} from '@/engine/components/render/bloomRenderComponent';\r\n\r\nclass Renderer extends System implements EngineEntityListener {\r\n\r\n    protected camera: PerspectiveCamera;\r\n\r\n    protected scene: Scene;\r\n    protected starScene: Scene;\r\n\r\n    protected renderer: WebGLRenderer;\r\n\r\n    protected family?: Family;\r\n\r\n    protected composer: EffectComposer;\r\n\r\n    constructor(mountElement: Element) {\r\n        super();\r\n\r\n        this.scene     = new Scene();\r\n        this.starScene = new Scene();\r\n\r\n        this.camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 30000);\r\n        this.camera.position.set(0.5, 20, 20);\r\n        this.camera.lookAt(new Vector3(0, 1, 0));\r\n\r\n        this.renderer = new WebGLRenderer();\r\n        this.renderer.setPixelRatio(window.devicePixelRatio);\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.renderer.autoClear = false;\r\n\r\n        this.composer = new EffectComposer(this.renderer);\r\n\r\n        mountElement.appendChild(this.renderer.domElement);\r\n\r\n        const renderRegular = new RenderPass(this.scene, this.camera);\r\n        renderRegular.clear = false;\r\n\r\n        const renderModel = new RenderPass(this.starScene, this.camera);\r\n        renderModel.clear = false;\r\n\r\n        const effectBloom = new UnrealBloomPass(\r\n            new THREE.Vector2(window.innerWidth, window.innerHeight),\r\n            1.5, 0.4, 0.85);\r\n\r\n        effectBloom.threshold = 0;\r\n        effectBloom.strength  = 2;\r\n        effectBloom.radius    = 1;\r\n\r\n\r\n        const outputPass          = new ShaderPass(CopyShader);\r\n        outputPass.renderToScreen = true;\r\n\r\n        const clearPass = new ClearPass();\r\n\r\n        this.composer.addPass(clearPass);\r\n        this.composer.addPass(renderModel);\r\n\r\n        this.composer.addPass(effectBloom);\r\n        this.composer.addPass(renderRegular);\r\n        this.composer.addPass(outputPass);\r\n\r\n        window.onresize = () => {\r\n            this.camera.aspect = window.innerWidth / window.innerHeight;\r\n            this.camera.updateProjectionMatrix();\r\n            this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        };\r\n    }\r\n\r\n    public onEntityAdded(entity: Entity): void {\r\n        if (entity.hasComponent(RenderComponent)) {\r\n            const renderComponent = entity.getComponent(RenderComponent);\r\n\r\n            if (renderComponent instanceof BloomRenderComponent) {\r\n                this.starScene.add(renderComponent.getMesh());\r\n            } else {\r\n                this.scene.add(renderComponent.getMesh());\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    public onEntityRemoved(entity: Entity): void {\r\n        if (entity.hasComponent(RenderComponent)) {\r\n            this.scene.remove(entity.getComponent(RenderComponent).getMesh());\r\n            this.starScene.remove(entity.getComponent(RenderComponent).getMesh());\r\n        }\r\n    }\r\n\r\n    public onAttach(engine: Engine): void {\r\n        super.onAttach(engine);\r\n        engine.addEntityListener(this);\r\n\r\n        this.family = new FamilyBuilder(engine).include(RenderComponent).build();\r\n    }\r\n\r\n    public getCamera(): Camera {\r\n        return this.camera;\r\n    }\r\n\r\n    public getScene(): Scene {\r\n        return this.scene;\r\n    }\r\n\r\n    public getStarScene(): Scene {\r\n        return this.starScene;\r\n    }\r\n\r\n    public getRenderer(): THREE.WebGLRenderer {\r\n        return this.renderer;\r\n    }\r\n\r\n    public update(engine: Engine, delta: number): void {\r\n\r\n        if (this.family) {\r\n            for (const entity of this.family.entities) {\r\n                const positionComponent = entity.getComponent(PositionComponent);\r\n                const renderComponent   = entity.getComponent(RenderComponent);\r\n\r\n                renderComponent.getMesh().position.copy(positionComponent.getPosition());\r\n                renderComponent.update(delta, this.camera);\r\n\r\n            }\r\n        }\r\n        this.camera.updateProjectionMatrix();\r\n        this.composer.render(delta);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport {Renderer};\r\n","import {Entity} from '@nova-engine/ecs';\r\n\r\nclass Ship extends Entity {\r\n    public get mass(): number {\r\n        return this._mass;\r\n    }\r\n\r\n    public set mass(value: number) {\r\n        this._mass = value;\r\n    }\r\n\r\n    public get enginePower(): number {\r\n        return this._enginePower;\r\n    }\r\n\r\n    public set enginePower(value: number) {\r\n        this._enginePower = value;\r\n    }\r\n    public get team(): number {\r\n        return this._team;\r\n    }\r\n\r\n    public set team(value: number) {\r\n        this._team = value;\r\n    }\r\n\r\n    private _name: string = '';\r\n    private _team: number = 1;\r\n\r\n    private _mass: number        = 1000;\r\n    private _enginePower: number = 1000;\r\n\r\n\r\n\r\n    public get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    public set name(value: string) {\r\n        this._name = value;\r\n    }\r\n}\r\n\r\nexport {Ship};\r\n","import {Component} from '@nova-engine/ecs';\r\nimport {Vector3} from 'three';\r\n\r\nclass VelocityComponent implements Component {\r\n    public tag = 'VelocityComponent';\r\n\r\n    protected velocity: Vector3 = new Vector3(0.0, 0, 0);\r\n    protected acceleration: Vector3 = new Vector3(0.0, 0.0, 0.0);\r\n\r\n    public getVelocity(): Vector3 {\r\n        return new Vector3().copy(this.velocity);\r\n    }\r\n\r\n    public setVelocity(velocity: Vector3): void {\r\n        this.velocity.copy(velocity);\r\n    }\r\n\r\n    public getAcceleration(): Vector3 {\r\n        return new Vector3().copy(this.acceleration);\r\n    }\r\n\r\n    public setAcceleration(velocity: Vector3): void {\r\n        this.acceleration.copy(velocity);\r\n    }\r\n}\r\n\r\nexport {VelocityComponent};\r\n","import {Component} from '@nova-engine/ecs';\r\nimport {Object3D} from 'three';\r\n\r\nclass SelectableComponent implements Component {\r\n    public static tag = 'SelectableComponent';\r\n\r\n    public selectionIndicatorObject: Object3D | null = null;\r\n\r\n    protected selected: boolean = false;\r\n\r\n    public select(): void {\r\n        if (!this.selected) {\r\n            this.selected = true;\r\n            this.onSelection();\r\n        }\r\n    }\r\n\r\n    public deselect(): void {\r\n        if (this.selected) {\r\n            this.selected = false;\r\n\r\n            this.onDeselection();\r\n        }\r\n    }\r\n\r\n    public isSelected(): boolean {\r\n        return this.selected;\r\n    }\r\n\r\n    protected onSelection() {\r\n        console.log('Generic Selection');\r\n\r\n    }\r\n\r\n    protected onDeselection() {\r\n        this.selected = false;\r\n        console.log('Generic Deselection');\r\n    }\r\n\r\n}\r\n\r\nexport {SelectableComponent};\r\n","import {SelectableComponent} from '@/engine/components/selection/selectableComponent';\r\n\r\nclass ShipSelectableComponent extends SelectableComponent {\r\n    protected onSelection() {\r\n        console.log('Reporting for Duty!');\r\n    }\r\n\r\n    protected onDeselection() {\r\n        console.log('awwww');\r\n    }\r\n}\r\n\r\nexport {ShipSelectableComponent};\r\n","import {FlightComputerState} from '@/engine/state/flightComputer/FlightComputerState';\r\nimport {Entity} from '@nova-engine/ecs';\r\nimport {FlightComputerComponent} from '@/engine/components/ship/flightComputerComponent';\r\nimport {PositionComponent} from '@/engine/components/world/positionComponent';\r\nimport {VelocityComponent} from '@/engine/components/world/velocityComponent';\r\nimport {FlightComputerTerminatingVelocityState} from '@/engine/state/flightComputer/FlightComputerTerminatingVelocityState';\r\nimport {RenderComponent} from '@/engine/components/render/renderComponent';\r\nimport {Ship} from '@/engine/entities/ship';\r\n\r\nclass FlightComputerAcceleratingState implements FlightComputerState {\r\n    public onEnter(entity: Ship): void {\r\n        console.log('onEnter FlightComputerAcceleratingState');\r\n        const target   = entity.getComponent(FlightComputerComponent).getTarget();\r\n        const position = entity.getComponent(PositionComponent).getPosition();\r\n\r\n        const acceleration = entity.enginePower / entity.mass;\r\n        const thrustVector = target.sub(position).normalize().multiplyScalar(acceleration);\r\n\r\n        entity.getComponent(VelocityComponent).setAcceleration(thrustVector);\r\n\r\n    }\r\n\r\n    public onExit(entity: Entity): void {\r\n        console.log('onExit FlightComputerAcceleratingState');\r\n    }\r\n\r\n    public update(entity: Ship, delta: number): FlightComputerState | null {\r\n        const target   = entity.getComponent(FlightComputerComponent).getTarget();\r\n        const position = entity.getComponent(PositionComponent).getPosition();\r\n        const velocity = entity.getComponent(VelocityComponent).getVelocity();\r\n\r\n        const displacement                 = target.distanceTo(position);\r\n\r\n        const acceleration = entity.enginePower / entity.mass;\r\n\r\n        const maxThrustInOppositeDirection = (target.sub(position)).normalize().multiplyScalar(acceleration);\r\n\r\n        const displacementRequiredToStop = velocity.lengthSq() / (2 * maxThrustInOppositeDirection.length());\r\n        if (displacementRequiredToStop >= displacement) {\r\n            return new FlightComputerTerminatingVelocityState();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public handleNewTarget(): FlightComputerState {\r\n        return new FlightComputerTerminatingVelocityState();\r\n    }\r\n\r\n}\r\n\r\nexport {FlightComputerAcceleratingState};\r\n","import {FlightComputerState} from '@/engine/state/flightComputer/FlightComputerState';\r\nimport {FlightComputerComponent} from '@/engine/components/ship/flightComputerComponent';\r\nimport {FlightComputerAcceleratingState} from '@/engine/state/flightComputer/FlightComputerAcceleratingState';\r\nimport {Entity} from '@nova-engine/ecs';\r\n\r\nclass FlightComputerStationaryState implements FlightComputerState {\r\n    public onEnter(entity: Entity): void {\r\n        console.log('onEnter FlightComputerStationaryState');\r\n    }\r\n\r\n    public onExit(entity: Entity): void {\r\n        console.log('onExit FlightComputerStationaryState');\r\n    }\r\n\r\n    public update(entity: Entity, delta: number): FlightComputerState | null {\r\n        if (entity.getComponent(FlightComputerComponent).hasTarget()) {\r\n            return new FlightComputerAcceleratingState();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public handleNewTarget(): FlightComputerState | null {\r\n        return new FlightComputerAcceleratingState();\r\n    }\r\n\r\n}\r\n\r\nexport {FlightComputerStationaryState};\r\n","import {FlightComputerState} from '@/engine/state/flightComputer/FlightComputerState';\r\nimport {Entity} from '@nova-engine/ecs';\r\nimport {VelocityComponent} from '@/engine/components/world/velocityComponent';\r\nimport {Vector3} from 'three';\r\nimport {FlightComputerStationaryState} from '@/engine/state/flightComputer/FlightComputerStationaryState';\r\nimport {PositionComponent} from '@/engine/components/world/positionComponent';\r\nimport {FlightComputerComponent} from '@/engine/components/ship/flightComputerComponent';\r\n\r\nclass FlightComputerTerminatingVelocityState implements FlightComputerState {\r\n    public update(entity: Entity, delta: number): FlightComputerState | null {\r\n\r\n        const velocityComponent = entity.getComponent(VelocityComponent);\r\n\r\n        const velocity = velocityComponent.getVelocity();\r\n\r\n        if (velocity.length() < 0.01) {\r\n            return new FlightComputerStationaryState();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public onEnter(entity: Entity): void {\r\n        // console.log('onEnter FlightComputerTerminatingVelocityState');\r\n        const velocityComponent = entity.getComponent(VelocityComponent);\r\n\r\n        const velocity = velocityComponent.getVelocity();\r\n        const requiredThrustNormal = velocity.multiplyScalar(-1).normalize();\r\n\r\n        velocityComponent.setAcceleration(requiredThrustNormal);\r\n    }\r\n\r\n    public onExit(entity: Entity): void {\r\n        // console.log('onExit FlightComputerTerminatingVelocityState');\r\n        const velocityComponent = entity.getComponent(VelocityComponent);\r\n\r\n        velocityComponent.setAcceleration(new Vector3(0, 0, 0));\r\n\r\n        const flightComputer = entity.getComponent(FlightComputerComponent);\r\n        if (flightComputer.hasTarget()) {\r\n            const target = flightComputer.getTarget();\r\n            const position = entity.getComponent(PositionComponent).getPosition();\r\n\r\n            if (position.distanceTo(target) < 0.1) {\r\n                flightComputer.setTarget(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    public handleNewTarget(): FlightComputerState | null {\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nexport {FlightComputerTerminatingVelocityState};\r\n","import {Component, Entity} from '@nova-engine/ecs';\r\nimport {Vector3} from 'three';\r\nimport {FlightComputerState} from '@/engine/state/flightComputer/FlightComputerState';\r\nimport {FlightComputerTerminatingVelocityState} from '@/engine/state/flightComputer/FlightComputerTerminatingVelocityState';\r\n\r\nclass FlightComputerComponent implements Component {\r\n\r\n    protected target: Vector3 | null = null;\r\n    protected entity!: Entity;\r\n\r\n    protected state: FlightComputerState = new FlightComputerTerminatingVelocityState();\r\n\r\n    public initialise(entity: Entity) {\r\n        this.state.onEnter(entity);\r\n        this.entity = entity;\r\n    }\r\n\r\n    public hasTarget(): boolean {\r\n        return this.target !== null;\r\n    }\r\n\r\n    public getTarget(): Vector3 {\r\n        if (!this.target) {\r\n            throw new Error('Flight Computer has no target');\r\n        }\r\n\r\n        return new Vector3().copy(this.target);\r\n    }\r\n\r\n    public setTarget(target: Vector3 | null): void {\r\n        if (target === null) {\r\n            this.target = null;\r\n            return;\r\n        }\r\n\r\n        this.target = new Vector3().copy(target);\r\n        const newState = this.state.handleNewTarget();\r\n\r\n        if (newState) {\r\n            this.setState(newState);\r\n        }\r\n    }\r\n\r\n    public update(delta: number) {\r\n        if (!this.entity) {\r\n            throw new Error('Entity not defined');\r\n        }\r\n        const newState = this.state.update(this.entity, delta);\r\n\r\n        if (newState) {\r\n            this.setState(newState);\r\n        }\r\n    }\r\n\r\n    protected setState(state: FlightComputerState) {\r\n        this.state.onExit(this.entity);\r\n        this.state = state;\r\n\r\n        this.state.onEnter(this.entity);\r\n    }\r\n\r\n}\r\n\r\nexport {FlightComputerComponent};\r\n","export default [\r\n    'Ajax',\r\n    'Albatross',\r\n    'Albrighton',\r\n    'Alert',\r\n    'Ambassador',\r\n    'Amsterdam',\r\n    'Anacreon',\r\n    'Andromeda',\r\n    'Apollo',\r\n    'Arrogant',\r\n    'Arrow',\r\n    'Ascension',\r\n    'Asgard',\r\n    'Assault',\r\n    'Assurance',\r\n    'Astute',\r\n    'Atlantis',\r\n    'Atlas',\r\n    'Attack',\r\n    'Audacity',\r\n    'Austere',\r\n    'Bountiful',\r\n    'Captivity',\r\n    'Centaur',\r\n    'Ceres',\r\n    'Challenger',\r\n    'Chevron',\r\n    'Daedalus',\r\n    'Daring',\r\n    'Defiance',\r\n    'Dependence',\r\n    'Diligence',\r\n    'Diligent',\r\n    'Discovery',\r\n    'Elephant',\r\n    'Endurance',\r\n    'Enterprise',\r\n    'Eruption',\r\n    'Faithful',\r\n    'Farragut',\r\n    'Hercules',\r\n    'Icarus',\r\n    'Illustrious',\r\n    'Impregnable',\r\n    'Impulsive',\r\n    'Indefatigable',\r\n    'Indignant',\r\n    'Indomitable',\r\n    'Infernal',\r\n    'Inscrutable',\r\n    'Integrity',\r\n    'Intrepid',\r\n    'Invincible',\r\n    'Kelvin',\r\n    'Medusa',\r\n    'Meredith',\r\n    'Merlin',\r\n    'Miranda',\r\n    'Mischief',\r\n    'Narcissus',\r\n    'Nautilus',\r\n    'Nemesis',\r\n    'Neptune',\r\n    'Olympus',\r\n    'Opportune',\r\n    'Orion',\r\n    'Orpheus',\r\n    'Orwell',\r\n    'Paladin',\r\n    'Paragon',\r\n    'Pegasus',\r\n    'Peregrine',\r\n    'Powerful',\r\n    'Rapid',\r\n    'Rattlesnake',\r\n    'Regulus',\r\n    'Relentless',\r\n    'Reliance',\r\n    'Repulse',\r\n    'Resistance',\r\n    'Resolute',\r\n    'Scimitar',\r\n    'Scorpion',\r\n    'Sentinel',\r\n    'Sovereign',\r\n    'Spearhead',\r\n    'Spirit',\r\n    'Stratagem',\r\n    'Stubborn',\r\n    'Sturdy',\r\n    'Thor',\r\n    'Tireless',\r\n    'Ultimatum',\r\n    'Unbeaten',\r\n    'Unbending',\r\n    'Unbridled',\r\n    'Unbroken',\r\n    'Undaunted',\r\n    'Unity',\r\n    'Unrivalled',\r\n    'Unruffled',\r\n    'Unshaken',\r\n    'Untiring',\r\n    'Valiant',\r\n    'Valkyrie',\r\n    'Vengeance',\r\n    'Victorious',\r\n    'Victory',\r\n    'Warrior',\r\n    'Warspite'\r\n];\r\n","import {Component} from '@nova-engine/ecs';\r\n\r\nclass HealthComponent implements Component {\r\n    private _hull: number    = 100;\r\n    private _shields: number = 100;\r\n\r\n\r\n    public get hull(): number {\r\n        return this._hull;\r\n    }\r\n\r\n    public set hull(value: number) {\r\n        this._hull = value;\r\n    }\r\n\r\n    public get shields(): number {\r\n        return this._shields;\r\n    }\r\n\r\n    public set shields(value: number) {\r\n        this._shields = value;\r\n    }\r\n\r\n    public damage(value: number) {\r\n        if (this.shields < value) {\r\n            value -= this.shields;\r\n            this.shields = 0;\r\n        } else {\r\n            this.shields -= value;\r\n        }\r\n\r\n        this.hull -= value;\r\n\r\n    }\r\n}\r\n\r\nexport {HealthComponent};\r\n","import {Component,} from '@nova-engine/ecs';\r\nimport {LaserWeapon} from '@/engine/class/laserWeapon';\r\n\r\nclass LoadoutComponent implements Component {\r\n    private _weapons: LaserWeapon[] = [];\r\n\r\n\r\n    public get weapons(): LaserWeapon[] {\r\n        return this._weapons;\r\n    }\r\n\r\n    public set weapons(value: LaserWeapon[]) {\r\n        this._weapons = value;\r\n    }\r\n}\r\n\r\nexport {LoadoutComponent}\r\n","import Vue from 'vue';\r\n\r\nconst EventBus = new Vue();\r\n\r\nexport {EventBus};\r\n","import {Entity} from '@nova-engine/ecs';\r\n\r\nabstract class Weapon {\r\n    abstract fire(attacker: Entity, defender: Entity): void;\r\n}\r\n\r\nexport {Weapon};\r\n","import {EventBus} from '@/eventBus';\r\nimport {Entity} from '@nova-engine/ecs';\r\nimport {LaserFiredEvent} from '@/events/weapon/laserFiredEvent';\r\nimport {PositionComponent} from '@/engine/components/world/positionComponent';\r\nimport {Weapon} from '@/engine/class/weapon';\r\nimport {HealthComponent} from '@/engine/components/ship/healthComponent';\r\nimport {Vector3} from 'three';\r\n\r\nclass LaserWeapon extends Weapon {\r\n    protected lastFired: number = 0;\r\n\r\n    constructor(protected _damage: number,\r\n                protected _accuracy: number,\r\n                protected _range: number,\r\n                protected _cooldown: number) {\r\n        super();\r\n    }\r\n\r\n    get cooldown(): number {\r\n        return this._cooldown;\r\n    }\r\n\r\n    set cooldown(value: number) {\r\n        this._cooldown = value;\r\n    }\r\n\r\n    get damage(): number {\r\n        return this._damage;\r\n    }\r\n\r\n    set damage(value: number) {\r\n        this._damage = value;\r\n    }\r\n\r\n    get accuracy(): number {\r\n        return this._accuracy;\r\n    }\r\n\r\n    set accuracy(value: number) {\r\n        this._accuracy = value;\r\n    }\r\n\r\n    get range(): number {\r\n        return this._range;\r\n    }\r\n\r\n    set range(value: number) {\r\n        this._range = value;\r\n    }\r\n\r\n    public canFire(): boolean {\r\n        return (Date.now() - this.lastFired) > this.cooldown;\r\n    }\r\n\r\n    public fire(attacker: Entity, defender: Entity): void {\r\n        this.lastFired = Date.now();\r\n\r\n        const variance = new Vector3(Math.random() * 0.1, Math.random() * 0.1, Math.random() * 0.1);\r\n\r\n\r\n        if ((Math.random() * 100) < this.accuracy) {\r\n\r\n            const laserFiredEvent: LaserFiredEvent = {\r\n                source:      attacker.getComponent(PositionComponent).getPosition(),\r\n                destination: defender.getComponent(PositionComponent).getPosition().add(variance),\r\n                colour:      attacker.team === 1 ? 0x00FF00 : 0xFF0000\r\n            };\r\n            EventBus.$emit('laser-fired', laserFiredEvent);\r\n\r\n            const damage = Math.random() * this.damage;\r\n            defender.getComponent(HealthComponent).damage(damage);\r\n        } else {\r\n            const laserFiredEvent: LaserFiredEvent = {\r\n                source:      attacker.getComponent(PositionComponent).getPosition(),\r\n                destination: defender.getComponent(PositionComponent).getPosition().add(variance.multiplyScalar(20.0)),\r\n                colour:      attacker.team === 1 ? 0x00FF00 : 0xFF0000\r\n            };\r\n\r\n            console.log('MISS');\r\n\r\n            EventBus.$emit('laser-fired', laserFiredEvent);\r\n        }\r\n    }\r\n}\r\n\r\nexport {LaserWeapon};\r\n","const AU = 100;\r\n\r\nconst sunRadius = 0.00465047 * AU;\r\n\r\nconst solOrbitDistances = {\r\n    mercury: 0.39 * AU,\r\n    venus:   0.7 * AU,\r\n    earth:   AU,\r\n    mars:    1.524 * AU,\r\n    jupiter: 5.2 * AU,\r\n    saturn:  9.6 * AU,\r\n    neptune: 30.1 * AU,\r\n    pluto:   39.5 * AU,\r\n};\r\n\r\nconst gamePacing   = 160.0;\r\nconst speedOfLight = AU * 0.00200399 * gamePacing;\r\n\r\n\r\nexport {AU, sunRadius, solOrbitDistances, speedOfLight};\r\n\r\n","import {Ship} from '@/engine/entities/ship';\r\nimport {PositionComponent} from '@/engine/components/world/positionComponent';\r\nimport {RenderComponent} from '@/engine/components/render/renderComponent';\r\nimport {VelocityComponent} from '@/engine/components/world/velocityComponent';\r\nimport * as THREE from 'three';\r\nimport {Renderer} from '@/engine/renderer';\r\nimport {Engine} from '@nova-engine/ecs';\r\nimport {ShipSelectableComponent} from '@/engine/components/selection/shipSelectableComponent';\r\nimport {FlightComputerComponent} from '@/engine/components/ship/flightComputerComponent';\r\nimport shipNames from './../entities/ship/nameList';\r\nimport {HealthComponent} from '@/engine/components/ship/healthComponent';\r\nimport {LoadoutComponent} from '@/engine/components/ship/LoadoutComponent';\r\nimport {LaserWeapon} from '@/engine/class/laserWeapon';\r\nimport {AU} from '@/engine/scalingHelper';\r\n\r\nclass ShipFactory {\r\n    protected id = 1;\r\n\r\n    public constructor(protected renderer: Renderer, protected engine: Engine) {\r\n\r\n    }\r\n\r\n    public createShip(team: number = 1, type: string): Ship {\r\n        const ship = new Ship();\r\n        ship.team  = team;\r\n\r\n        ship.name = shipNames[Math.floor(Math.random() * shipNames.length)];\r\n\r\n        ship.putComponent(PositionComponent);\r\n        ship.putComponent(RenderComponent);\r\n        ship.putComponent(VelocityComponent);\r\n        ship.putComponent(FlightComputerComponent).initialise(ship);\r\n        ship.putComponent(HealthComponent);\r\n\r\n        if (team === 1) {\r\n            ship.putComponent(ShipSelectableComponent);\r\n        }\r\n\r\n        let colour = 0xffffff;\r\n\r\n        switch (team) {\r\n            case 1:\r\n                colour = 0x00ff00;\r\n                break;\r\n            case 2:\r\n                colour = 0xff0000;\r\n                break;\r\n            case 3:\r\n                colour = 0x999999;\r\n                break;\r\n        }\r\n\r\n        ship.id = this.id;\r\n        this.id++;\r\n\r\n        switch (type) {\r\n            case 'battleship':\r\n                this.createBattleship(ship, colour);\r\n                break;\r\n            case 'battlecruiser':\r\n                this.createBattlecruiser(ship, colour);\r\n                break;\r\n            case 'destroyer':\r\n                this.createDestroyer(ship, colour);\r\n                break;\r\n        }\r\n\r\n        return ship;\r\n    }\r\n\r\n    protected createBattleship(ship: Ship, colour: number) {\r\n        ship.mass        = 18000;\r\n        ship.enginePower = 10000;\r\n\r\n        const geometry = new THREE.CylinderGeometry(0.25, 0.25, 1);\r\n\r\n        geometry.rotateX(Math.PI / 2);\r\n\r\n        const material = new THREE.MeshBasicMaterial({color: colour});\r\n        const mesh     = new THREE.Mesh(geometry, material);\r\n\r\n        ship.getComponent(RenderComponent).mesh = mesh;\r\n\r\n        ship.getComponent(HealthComponent).hull = 1000;\r\n\r\n        const loadout = ship.putComponent(LoadoutComponent);\r\n\r\n        const weapon = new LaserWeapon(50, 50, 0.1 * AU, 1000);\r\n        loadout.weapons.push(weapon);\r\n\r\n        const fastLaser = new LaserWeapon(20, 50, 0.2 * AU, 500);\r\n        loadout.weapons.push(fastLaser);\r\n    }\r\n\r\n    protected createBattlecruiser(ship: Ship, colour: number) {\r\n\r\n        ship.mass        = 12000;\r\n        ship.enginePower = 8000;\r\n        const geometry   = new THREE.BoxGeometry(0.25, 0.25, 1);\r\n\r\n        ship.getComponent(HealthComponent).hull = 500;\r\n\r\n\r\n        const material = new THREE.MeshBasicMaterial({color: colour});\r\n        const mesh     = new THREE.Mesh(geometry, material);\r\n\r\n        ship.getComponent(RenderComponent).mesh = mesh;\r\n\r\n\r\n        const loadout = ship.putComponent(LoadoutComponent);\r\n\r\n        const weapon = new LaserWeapon(50, 50, 0.1 * AU, 1000);\r\n        loadout.weapons.push(weapon);\r\n\r\n    }\r\n\r\n    protected createDestroyer(ship: Ship, colour: number) {\r\n\r\n        ship.mass        = 1000;\r\n        ship.enginePower = 1000;\r\n\r\n        const geometry = new THREE.ConeGeometry(0.1, 0.7, 32);\r\n        geometry.rotateX(Math.PI / 2);\r\n        const material = new THREE.MeshBasicMaterial({color: colour});\r\n        const mesh     = new THREE.Mesh(geometry, material);\r\n\r\n        ship.getComponent(RenderComponent).mesh = mesh;\r\n\r\n        const loadout = ship.putComponent(LoadoutComponent);\r\n\r\n        const weapon = new LaserWeapon(50, 50, 0.1 * AU, 1000);\r\n        loadout.weapons.push(weapon);\r\n\r\n    }\r\n}\r\n\r\nexport {ShipFactory};\r\n","import {Engine, Family, FamilyBuilder, System} from '@nova-engine/ecs';\r\nimport {VelocityComponent} from '@/engine/components/world/velocityComponent';\r\nimport {PositionComponent} from '@/engine/components/world/positionComponent';\r\nimport {speedOfLight} from '@/engine/scalingHelper';\r\n\r\nclass VelocityApplicationSystem extends System {\r\n\r\n    protected family?: Family;\r\n\r\n    public onAttach(engine: Engine): void {\r\n        super.onAttach(engine);\r\n\r\n        this.family = new FamilyBuilder(engine).include(VelocityComponent).build();\r\n    }\r\n\r\n    public update(engine: Engine, delta: number): void {\r\n        if (this.family) {\r\n            for (const entity of this.family.entities) {\r\n                const velocityComponent = entity.getComponent(VelocityComponent);\r\n                const positionComponent = entity.getComponent(PositionComponent);\r\n\r\n                let newVelocity = velocityComponent.getVelocity()\r\n                    .add(velocityComponent.getAcceleration().multiplyScalar(delta));\r\n\r\n                if (newVelocity.length() > speedOfLight * 0.1) {\r\n                    newVelocity = newVelocity.normalize().multiplyScalar(speedOfLight * 0.1);\r\n                }\r\n\r\n                velocityComponent.setVelocity(newVelocity);\r\n\r\n                const movement    = velocityComponent.getVelocity().multiplyScalar(delta);\r\n                const newPosition = positionComponent.getPosition().add(movement);\r\n\r\n                positionComponent.setPosition(newPosition);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport {VelocityApplicationSystem};\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('script',{attrs:{\"id\":\"fragmentShader\",\"type\":\"x-shader/x-fragment\"}},[_vm._v(\"\\n\\t\\t\\tuniform float time;\\n\\t\\t\\tuniform float fogDensity;\\n\\t\\t\\tuniform vec3 fogColor;\\n\\t\\t\\tuniform sampler2D texture1;\\n\\t\\t\\tuniform sampler2D texture2;\\n\\t\\t\\tvarying vec2 vUv;\\n\\t\\t\\tvoid main( void ) {\\n\\t\\t\\t\\tvec2 position = - 1.0 + 2.0 * vUv;\\n\\t\\t\\t\\tvec4 noise = texture2D( texture1, vUv );\\n\\t\\t\\t\\tvec2 T1 = vUv + vec2( 1.5, - 1.5 ) * time * 0.02;\\n\\t\\t\\t\\tvec2 T2 = vUv + vec2( - 0.5, 3.0 ) * time * 0.01;\\n\\t\\t\\t\\tT1.x += noise.x * 2.0;\\n\\t\\t\\t\\tT1.y += noise.y * 2.0;\\n\\t\\t\\t\\tT2.x -= noise.y * 0.2;\\n\\t\\t\\t\\tT2.y += noise.z * 0.2;\\n\\t\\t\\t\\tfloat p = texture2D( texture1, T1 * 2.0 ).a;\\n\\t\\t\\t\\tvec4 color = texture2D( texture2, T2 * 2.0 );\\n\\t\\t\\t\\tvec4 temp = color * ( vec4( p, p, p, p ) * 2.0 ) + ( color * color - 0.1 );\\n\\t\\t\\t\\tif( temp.r > 1.0 ) { temp.bg += clamp( temp.r - 2.0, 0.0, 100.0 ); }\\n\\t\\t\\t\\tif( temp.g > 1.0 ) { temp.rb += temp.g - 1.0; }\\n\\t\\t\\t\\tif( temp.b > 1.0 ) { temp.rg += temp.b - 1.0; }\\n\\n\\t\\t\\t\\ttemp.b -= 0.1;\\n\\t\\t\\t\\ttemp.r -= 0.1;\\n\\t\\t\\t\\ttemp.g -= 0.1;\\n\\t\\t\\t\\tgl_FragColor = temp;\\n\\t\\t\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\t\\t\\t\\tconst float LOG2 = 1.442695;\\n\\t\\t\\t\\tfloat fogFactor = exp2( - fogDensity * fogDensity * 0.1 * LOG2 );\\n\\t\\t\\t\\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n\\t\\t\\t\\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n\\t\\t\\t}\\n\\n        \")]),_c('script',{attrs:{\"id\":\"vertexShader\",\"type\":\"x-shader/x-vertex\"}},[_vm._v(\"\\n\\t\\t\\tuniform vec2 uvScale;\\n\\t\\t\\tvarying vec2 vUv;\\n\\t\\t\\tvoid main()\\n\\t\\t\\t{\\n\\t\\t\\t\\tvUv = uvScale * uv;\\n\\t\\t\\t\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\t\\t\\t\\tgl_Position = projectionMatrix * mvPosition;\\n\\t\\t\\t}\\n\\n        \")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <script id=\"fragmentShader\" type=\"x-shader/x-fragment\">\r\n\t\t\tuniform float time;\r\n\t\t\tuniform float fogDensity;\r\n\t\t\tuniform vec3 fogColor;\r\n\t\t\tuniform sampler2D texture1;\r\n\t\t\tuniform sampler2D texture2;\r\n\t\t\tvarying vec2 vUv;\r\n\t\t\tvoid main( void ) {\r\n\t\t\t\tvec2 position = - 1.0 + 2.0 * vUv;\r\n\t\t\t\tvec4 noise = texture2D( texture1, vUv );\r\n\t\t\t\tvec2 T1 = vUv + vec2( 1.5, - 1.5 ) * time * 0.02;\r\n\t\t\t\tvec2 T2 = vUv + vec2( - 0.5, 3.0 ) * time * 0.01;\r\n\t\t\t\tT1.x += noise.x * 2.0;\r\n\t\t\t\tT1.y += noise.y * 2.0;\r\n\t\t\t\tT2.x -= noise.y * 0.2;\r\n\t\t\t\tT2.y += noise.z * 0.2;\r\n\t\t\t\tfloat p = texture2D( texture1, T1 * 2.0 ).a;\r\n\t\t\t\tvec4 color = texture2D( texture2, T2 * 2.0 );\r\n\t\t\t\tvec4 temp = color * ( vec4( p, p, p, p ) * 2.0 ) + ( color * color - 0.1 );\r\n\t\t\t\tif( temp.r > 1.0 ) { temp.bg += clamp( temp.r - 2.0, 0.0, 100.0 ); }\r\n\t\t\t\tif( temp.g > 1.0 ) { temp.rb += temp.g - 1.0; }\r\n\t\t\t\tif( temp.b > 1.0 ) { temp.rg += temp.b - 1.0; }\r\n\r\n\t\t\t\ttemp.b -= 0.1;\r\n\t\t\t\ttemp.r -= 0.1;\r\n\t\t\t\ttemp.g -= 0.1;\r\n\t\t\t\tgl_FragColor = temp;\r\n\t\t\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\t\t\t\tconst float LOG2 = 1.442695;\r\n\t\t\t\tfloat fogFactor = exp2( - fogDensity * fogDensity * 0.1 * LOG2 );\r\n\t\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\r\n\t\t\t\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\r\n\t\t\t}\r\n\r\n        </script>\r\n\r\n        <script id=\"vertexShader\" type=\"x-shader/x-vertex\">\r\n\t\t\tuniform vec2 uvScale;\r\n\t\t\tvarying vec2 vUv;\r\n\t\t\tvoid main()\r\n\t\t\t{\r\n\t\t\t\tvUv = uvScale * uv;\r\n\t\t\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\tgl_Position = projectionMatrix * mvPosition;\r\n\t\t\t}\r\n\r\n        </script>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"ShaderLoader\"\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/vuetify-loader/lib/loader.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ShaderLoader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/vuetify-loader/lib/loader.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ShaderLoader.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ShaderLoader.vue?vue&type=template&id=36e41560&scoped=true&\"\nimport script from \"./ShaderLoader.vue?vue&type=script&lang=js&\"\nexport * from \"./ShaderLoader.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"36e41560\",\n  null\n  \n)\n\nexport default component.exports","import {Entity} from '@nova-engine/ecs'\r\n\r\nclass Star extends Entity {\r\n\r\n}\r\n\r\nexport {Star}\r\n","import {BloomRenderComponent} from '@/engine/components/render/bloomRenderComponent';\r\n\r\nclass StarRenderComponent extends BloomRenderComponent {\r\n    public update(delta: number): void {\r\n        this.uniforms.time.value += delta;\r\n    }\r\n}\r\n\r\nexport {StarRenderComponent};\r\n","import {Star} from '@/engine/entities/star';\r\nimport {PositionComponent} from '@/engine/components/world/positionComponent';\r\nimport {Mesh, RepeatWrapping, ShaderMaterial, SphereGeometry, TextureLoader, Vector2, Vector3} from 'three';\r\nimport {StarRenderComponent} from '@/engine/components/render/starRenderComponent';\r\nimport {Renderer} from '@/engine/renderer';\r\nimport {Engine} from '@nova-engine/ecs';\r\n\r\nclass StarFactory {\r\n    public constructor(protected renderer: Renderer, protected engine: Engine) {\r\n    }\r\n\r\n    public createStar(size: number): Star {\r\n        const vertexElement = document.getElementById('vertexShader');\r\n        if (!vertexElement) {\r\n            throw new Error('Could not locate vertexShader');\r\n        }\r\n\r\n        const vertexShader: string = vertexElement.textContent || '';\r\n\r\n        const fragmentElement = document.getElementById('fragmentShader');\r\n        if (!fragmentElement) {\r\n            throw new Error('Could not locate fragmentShader');\r\n        }\r\n\r\n        const fragmentShader: string = fragmentElement.textContent || '';\r\n\r\n        const textureLoader = new TextureLoader();\r\n\r\n\r\n        const entity = new Star();\r\n        entity.putComponent(PositionComponent);\r\n        entity.putComponent(StarRenderComponent);\r\n\r\n        const renderComponent = entity.getComponent(StarRenderComponent);\r\n\r\n        // Render a star\r\n        renderComponent.uniforms = {\r\n            fogDensity: {value: 0.45},\r\n            fogColor: {value: new Vector3(0, 0, 0)},\r\n            time: {value: 1.0},\r\n            uvScale: {value: new Vector2(3.0, 1.0)},\r\n            texture1: {value: textureLoader.load('textures/lava/cloud.png')},\r\n            texture2: {value: textureLoader.load('textures/lava/lavatile.jpg')},\r\n        };\r\n\r\n        renderComponent.uniforms.texture1.value.wrapS = renderComponent.uniforms.texture1.value.wrapT = RepeatWrapping;\r\n        renderComponent.uniforms.texture2.value.wrapS = renderComponent.uniforms.texture2.value.wrapT = RepeatWrapping;\r\n\r\n        const material = new ShaderMaterial({\r\n            uniforms: renderComponent.uniforms,\r\n\r\n            vertexShader,\r\n            fragmentShader,\r\n        });\r\n\r\n        renderComponent.mesh = new Mesh(new SphereGeometry(size, 30, 30, 1), material);\r\n        this.renderer.getStarScene().add(renderComponent.getMesh());\r\n        renderComponent.getMesh().rotation.z = 45;\r\n        this.engine.addEntity(entity);\r\n\r\n        return entity;\r\n    }\r\n}\r\n\r\nexport {StarFactory};\r\n","import {LineGeometry} from 'three/examples/jsm/lines/LineGeometry';\r\n\r\nclass CircleGeometryFactory {\r\n    public static createCircleGeometry(radius: number, segments: number = 64): LineGeometry {\r\n\r\n        const geometry = new LineGeometry();\r\n        const vertices = [];\r\n        const colours  = [];\r\n\r\n        for (let i = 0; i <= segments; i++) {\r\n            const theta = (i / segments) * Math.PI * 2;\r\n            vertices.push(\r\n                Math.cos(theta) * radius,\r\n                0,\r\n                Math.sin(theta) * radius);\r\n            colours.push(0.5, 0.5, 0.5);\r\n        }\r\n\r\n        geometry.setPositions(vertices);\r\n        geometry.setColors(colours);\r\n        return geometry;\r\n    }\r\n}\r\n\r\nexport {CircleGeometryFactory};\r\n","import {Camera, Vector3} from 'three';\r\nimport {Engine, System} from '@nova-engine/ecs';\r\nimport {InputEventListener} from '@/engine/systems/input/inputEventListener';\r\nimport {UserInputSystem} from '@/engine/systems/userInputSystem';\r\n\r\nclass CameraControlSystem extends System implements InputEventListener {\r\n    protected velocity: Vector3 = new Vector3(0, 0, 0);\r\n\r\n    constructor(protected camera: Camera, protected inputSystem: UserInputSystem) {\r\n        super();\r\n    }\r\n\r\n    public update(engine: Engine, delta: number): void {\r\n\r\n        const speed = this.camera.position.y / 10.0;\r\n\r\n        if (this.inputSystem.isKeyPressed('W') || this.inputSystem.isKeyPressed('ArrowUp')) {\r\n            this.velocity.z -= delta * speed;\r\n        }\r\n\r\n        if (this.inputSystem.isKeyPressed('S') || this.inputSystem.isKeyPressed('ArrowDown')) {\r\n            this.velocity.z += delta * speed;\r\n        }\r\n\r\n        if (this.inputSystem.isKeyPressed('D') || this.inputSystem.isKeyPressed('ArrowRight')) {\r\n            this.velocity.x += delta * speed;\r\n        }\r\n\r\n        if (this.inputSystem.isKeyPressed('A') || this.inputSystem.isKeyPressed('ArrowLeft')) {\r\n            this.velocity.x -= delta * speed;\r\n        }\r\n\r\n        this.camera.position.add(this.velocity);\r\n        if (this.camera.position.y < 0.1) {\r\n            this.camera.position.y = 0.1;\r\n            this.velocity.multiplyScalar(0);\r\n        }\r\n\r\n        this.velocity.lerp(new Vector3(0, 0, 0), delta * 3);\r\n    }\r\n\r\n    public onInputEvent(type: string, event: Event): void {\r\n        if (type === 'wheel') {\r\n            this.onMouseWheel(event as WheelEvent);\r\n        }\r\n    }\r\n\r\n    protected onMouseWheel(event: WheelEvent): void {\r\n        const multiplier = -event.deltaY * 0.005 * (this.camera.position.y * 0.01);\r\n\r\n        if (event.deltaY < 0) {\r\n            const mouseIntersection = this.inputSystem.planeIntersectionPoint;\r\n            this.velocity.add(mouseIntersection.sub(this.camera.position).normalize().multiplyScalar(multiplier));\r\n        } else {\r\n            const centerIntersection = this.inputSystem.centerPlaneIntersectionPoint;\r\n            this.velocity.add(centerIntersection.sub(this.camera.position).normalize().multiplyScalar(multiplier));\r\n        }\r\n    }\r\n}\r\n\r\nexport {CameraControlSystem};\r\n","/**\r\n * @author HypnosNova / https://www.threejs.org.cn/gallery\r\n * Ported from three/examples/jsm/interactive/SelectionHelper.js by Karl Jacques\r\n */\r\n\r\nimport {Vector2, WebGLRenderer} from 'three';\r\nimport {SelectionBox} from 'three/examples/jsm/interactive/SelectionBox';\r\n\r\nclass SelectionHelper {\r\n\r\n    protected element!: HTMLElement;\r\n\r\n    protected startPoint: Vector2;\r\n    protected pointTopLeft: Vector2;\r\n    protected pointBottomRight: Vector2;\r\n\r\n    protected isDown: boolean;\r\n\r\n    constructor(selectionBox: SelectionBox, protected renderer: WebGLRenderer, cssClassName: string) {\r\n\r\n        this.element = document.createElement('div');\r\n        this.element.classList.add(cssClassName);\r\n        this.element.style.pointerEvents = 'none';\r\n\r\n        this.renderer = renderer;\r\n\r\n        this.startPoint       = new Vector2();\r\n        this.pointTopLeft     = new Vector2();\r\n        this.pointBottomRight = new Vector2();\r\n\r\n        this.isDown = false;\r\n\r\n        document.addEventListener('mousedown', (event) => {\r\n            if (event.button === 0) {\r\n                this.isDown = true;\r\n                this.onSelectStart(event);\r\n            }\r\n        }, false);\r\n\r\n        document.addEventListener('mousemove', (event) => {\r\n\r\n            if (this.isDown) {\r\n\r\n                this.onSelectMove(event);\r\n\r\n            }\r\n        }, false);\r\n\r\n        document.addEventListener('mouseup', (event: MouseEvent) => {\r\n            this.isDown = false;\r\n            this.onSelectOver();\r\n\r\n        }, false);\r\n    }\r\n\r\n\r\n    public onSelectStart(event: MouseEvent) {\r\n\r\n        document.body.appendChild(this.element);\r\n\r\n        this.element.style.left   = event.clientX + 'px';\r\n        this.element.style.top    = event.clientY + 'px';\r\n        this.element.style.width  = '0px';\r\n        this.element.style.height = '0px';\r\n\r\n        this.startPoint.x = event.clientX;\r\n        this.startPoint.y = event.clientY;\r\n    }\r\n\r\n    public onSelectMove(event: MouseEvent) {\r\n\r\n        this.pointBottomRight.x = Math.max(this.startPoint.x, event.clientX);\r\n        this.pointBottomRight.y = Math.max(this.startPoint.y, event.clientY);\r\n        this.pointTopLeft.x     = Math.min(this.startPoint.x, event.clientX);\r\n        this.pointTopLeft.y     = Math.min(this.startPoint.y, event.clientY);\r\n\r\n        this.element.style.left   = this.pointTopLeft.x + 'px';\r\n        this.element.style.top    = this.pointTopLeft.y + 'px';\r\n        this.element.style.width  = (this.pointBottomRight.x - this.pointTopLeft.x) + 'px';\r\n        this.element.style.height = (this.pointBottomRight.y - this.pointTopLeft.y) + 'px';\r\n    }\r\n\r\n    public onSelectOver() {\r\n        if (this.element.parentElement) {\r\n            this.element.parentElement.removeChild(this.element);\r\n        }\r\n    }\r\n}\r\n\r\nexport {SelectionHelper};\r\n","import {LineMaterial} from 'three/examples/jsm/lines/LineMaterial';\r\n\r\nclass LineMaterialFactory {\r\n    public static buildDottedMaterial(colour: number, lineWidth: number, dashScale: number = 2, gapSize: number = 0.5): LineMaterial {\r\n        const material = new LineMaterial(\r\n            {\r\n                color:     colour,\r\n                linewidth: lineWidth,\r\n                dashed:    true,\r\n                dashScale: dashScale,\r\n                gapSize:   gapSize\r\n            });\r\n\r\n        material.defines.USE_DASH = '';\r\n\r\n        material.resolution.set(window.innerWidth, window.innerHeight);\r\n\r\n        return material;\r\n    }\r\n\r\n    public static buildSolidMaterial(colour: number, lineWidth: number): LineMaterial {\r\n        const material = new LineMaterial(\r\n            {\r\n                color:     colour,\r\n                linewidth: lineWidth,\r\n                dashed:    false,\r\n            });\r\n\r\n        material.resolution.set(window.innerWidth, window.innerHeight);\r\n\r\n        return material;\r\n    }\r\n}\r\n\r\nexport {LineMaterialFactory};\r\n","import {Camera} from 'three';\r\nimport {RenderComponent} from '@/engine/components/render/renderComponent';\r\n\r\nclass SelectionMarkerRenderComponent extends RenderComponent {\r\n    public update(delta: number, camera: Camera): void {\r\n        super.update(delta, camera);\r\n\r\n        this.mesh.rotateY(delta);\r\n\r\n        const distance = camera.position.distanceTo(this.mesh.position);\r\n\r\n        if (distance < 10) {\r\n            this.mesh.material.linewidth = 5;\r\n        } else if (distance < 25) {\r\n            this.mesh.material.linewidth = 3;\r\n        } else if (distance < 50) {\r\n            this.mesh.material.linewidth = 2;\r\n        } else {\r\n            this.mesh.material.linewidth = 1;\r\n        }\r\n    }\r\n}\r\n\r\nexport {SelectionMarkerRenderComponent};\r\n","import {Engine, EngineEntityListener, Entity} from '@nova-engine/ecs';\r\nimport {LineMaterialFactory} from '@/engine/factories/material/lineMaterialFactory';\r\nimport {Line2} from 'three/examples/jsm/lines/Line2';\r\nimport {PositionComponent} from '@/engine/components/world/positionComponent';\r\nimport {CircleGeometryFactory} from '@/engine/factories/geometry/circleGeometryFactory';\r\nimport {SelectionMarkerRenderComponent} from '@/engine/components/render/selectionMarkerRenderComponent';\r\n\r\nclass SelectionMarkerTracker implements EngineEntityListener {\r\n    protected selectionMarkerMap: Map<Entity, Entity> = new Map();\r\n\r\n    constructor(protected engine: Engine) {\r\n\r\n    }\r\n\r\n    public onEntityAdded(entity: Entity): void {\r\n    }\r\n\r\n    public onEntityRemoved(entity: Entity): void {\r\n        this.onEntityDeselection(entity);\r\n    }\r\n\r\n    public onEntitySelection(entity: Entity): void {\r\n        if (!this.selectionMarkerMap.has(entity)) {\r\n            const geometry = CircleGeometryFactory.createCircleGeometry(0.75);\r\n            const material = LineMaterialFactory.buildDottedMaterial(0x0011ee, 10);\r\n\r\n            const line = new Line2(geometry, material);\r\n            line.computeLineDistances();\r\n            line.scale.set(1, 1, 1);\r\n\r\n            const selectionMarker = new Entity();\r\n\r\n            selectionMarker.putComponent(PositionComponent)\r\n                .setPositionReference(entity.getComponent(PositionComponent).getPositionReference());\r\n            selectionMarker.putComponent(SelectionMarkerRenderComponent).mesh = line;\r\n\r\n            this.engine.addEntity(selectionMarker);\r\n            this.selectionMarkerMap.set(entity, selectionMarker);\r\n        }\r\n    }\r\n\r\n    public onEntityDeselection(entity: Entity): void {\r\n        const markerEntity = this.selectionMarkerMap.get(entity);\r\n\r\n        if (markerEntity) {\r\n            this.engine.removeEntity(markerEntity);\r\n            this.selectionMarkerMap.delete(entity);\r\n        }\r\n    }\r\n}\r\n\r\nexport {SelectionMarkerTracker};\r\n","import {Engine, EngineEntityListener, Entity, Family, FamilyBuilder, System} from '@nova-engine/ecs';\r\nimport {Camera, Scene, WebGLRenderer} from 'three';\r\nimport {RenderComponent} from '@/engine/components/render/renderComponent';\r\nimport {SelectableComponent} from '@/engine/components/selection/selectableComponent';\r\nimport {InputEventListener} from '@/engine/systems/input/inputEventListener';\r\nimport {WorldMouseEvent} from '@/engine/systems/input/WorldMouseEvent';\r\nimport {UserInputSystem} from '@/engine/systems/userInputSystem';\r\nimport {SelectionBox} from 'three/examples/jsm/interactive/SelectionBox';\r\nimport {SelectionHelper} from '@/engine/systems/input/selectionHelper';\r\nimport {SelectionMarkerTracker} from '@/engine/class/marker/selectionMarkerTracker';\r\n\r\nclass EntitySelectionSystem extends System implements InputEventListener, EngineEntityListener {\r\n    protected family!: Family;\r\n    protected selectables!: Family;\r\n\r\n    protected selectionBox!: SelectionBox;\r\n    protected selectionHelper!: SelectionHelper;\r\n\r\n    protected selectionMarkerTracker!: SelectionMarkerTracker;\r\n\r\n    protected selectionGroups: Record<number, Entity[]> = {};\r\n\r\n    constructor(protected scene: Scene,\r\n                protected camera: Camera,\r\n                protected renderer: WebGLRenderer,\r\n                protected inputSystem: UserInputSystem,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    public onAttach(engine: Engine): void {\r\n        super.onAttach(engine);\r\n\r\n        this.family      = new FamilyBuilder(engine).include(RenderComponent).build();\r\n        this.selectables = new FamilyBuilder(engine).include(SelectableComponent).build();\r\n\r\n        this.selectionBox    = new SelectionBox(this.camera, this.scene);\r\n        this.selectionHelper = new SelectionHelper(this.selectionBox, this.renderer, 'selectBox');\r\n\r\n        this.selectionMarkerTracker = new SelectionMarkerTracker(engine);\r\n        engine.addEntityListener(this.selectionMarkerTracker);\r\n    }\r\n\r\n    public update(engine: Engine, delta: number): void {\r\n    }\r\n\r\n    public onInputEvent(type: string, event: Event): void {\r\n\r\n        if (type === 'mousedown') {\r\n            this.onMouseClick(event as WorldMouseEvent);\r\n            this.startSelection(event as WorldMouseEvent);\r\n        }\r\n\r\n        if (type === 'mousemove') {\r\n            this.onMouseMove(event as MouseEvent);\r\n        }\r\n\r\n        if (type === 'keydown') {\r\n            this.onKeyDown(event as KeyboardEvent);\r\n        }\r\n    }\r\n\r\n    public onEntityAdded(entity: Entity): void {\r\n    }\r\n\r\n    public onEntityRemoved(entity: Entity): void {\r\n        if (entity.hasComponent(SelectableComponent)) {\r\n            this.deselectEntity(entity);\r\n        }\r\n    }\r\n\r\n    public onKeyDown(event: KeyboardEvent) {\r\n        console.log(event.key);\r\n        if (!isNaN(Number(event.key))) {\r\n            if (this.inputSystem.isKeyPressed('Control')) {\r\n                event.preventDefault();\r\n                this.createNewGroup(Number(event.key));\r\n            } else {\r\n                this.selectGroup(Number(event.key));\r\n            }\r\n        }\r\n    }\r\n\r\n    protected createNewGroup(group: number) {\r\n        this.selectionGroups[group] = this.selectables.entities.filter((entity: Entity) => {\r\n            return entity.getComponent(SelectableComponent).isSelected();\r\n        });\r\n    }\r\n\r\n    protected selectGroup(group: number) {\r\n        this.unselectAllSelected();\r\n\r\n        if (group in this.selectionGroups) {\r\n            this.selectionGroups[group].forEach((entity: Entity) => {\r\n                this.selectEntity(entity);\r\n            });\r\n        }\r\n    }\r\n\r\n    protected startSelection(event: WorldMouseEvent): void {\r\n        this.selectionBox.startPoint.set(event.position.x, event.position.y, 0.5);\r\n    }\r\n\r\n    protected onMouseMove(event: MouseEvent): void {\r\n        if (this.inputSystem.isMousePressed(0)) {\r\n            this.selectionBox.endPoint.set(\r\n                (event.clientX / window.innerWidth) * 2 - 1,\r\n                -(event.clientY / window.innerHeight) * 2 + 1,\r\n                0.5);\r\n\r\n            const allSelected = this.selectionBox.select(this.selectionBox.startPoint, this.selectionBox.endPoint);\r\n\r\n            for (const obj of allSelected) {\r\n                // Find the render component which has this object\r\n                for (const entity of this.family.entities) {\r\n                    if (entity.hasComponent(SelectableComponent)) {\r\n                        const renderComponent = entity.getComponent(RenderComponent);\r\n                        if (renderComponent.getMesh() === obj) {\r\n                            this.selectEntity(entity);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onMouseClick(event: WorldMouseEvent) {\r\n        if (event.button === 0) {\r\n            if (!this.inputSystem.isKeyPressed('Shift')) {\r\n                this.unselectAllSelected();\r\n            }\r\n\r\n            if (this.family) {\r\n                // calculate objects intersecting the picking ray\r\n                const intersects = event.raycaster.intersectObjects(this.scene.children);\r\n\r\n                for (const obj of intersects) {\r\n                    const selectedObject = obj.object;\r\n\r\n                    // Find the render component which has this object\r\n                    for (const entity of this.family.entities) {\r\n                        if (entity.hasComponent(SelectableComponent)) {\r\n                            const renderComponent = entity.getComponent(RenderComponent);\r\n                            if (renderComponent.getMesh() === selectedObject) {\r\n                                this.selectEntity(entity);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    protected selectEntity(entity: Entity): void {\r\n        const selectableComponent = entity.getComponent(SelectableComponent);\r\n\r\n        if (!selectableComponent.isSelected()) {\r\n            this.selectionMarkerTracker.onEntitySelection(entity);\r\n        }\r\n\r\n        selectableComponent.select();\r\n    }\r\n\r\n    protected deselectEntity(entity: Entity): void {\r\n        const selectableComponent = entity.getComponent(SelectableComponent);\r\n\r\n        selectableComponent.deselect();\r\n\r\n        this.selectionMarkerTracker.onEntityDeselection(entity);\r\n    }\r\n\r\n    protected unselectAllSelected() {\r\n        if (this.selectables) {\r\n            for (const entity of this.selectables.entities) {\r\n                this.deselectEntity(entity);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport {EntitySelectionSystem};\r\n","import {Engine, Entity, Family, FamilyBuilder, System} from '@nova-engine/ecs';\r\nimport {Mesh, MeshBasicMaterial, SphereGeometry, Vector3} from 'three';\r\nimport {SelectableComponent} from '@/engine/components/selection/selectableComponent';\r\nimport {FlightComputerComponent} from '@/engine/components/ship/flightComputerComponent';\r\nimport {InputEventListener} from '@/engine/systems/input/inputEventListener';\r\nimport {WorldMouseEvent} from '@/engine/systems/input/WorldMouseEvent';\r\nimport {PositionComponent} from '@/engine/components/world/positionComponent';\r\n\r\nclass ShipMovementControlSystem extends System implements InputEventListener {\r\n    protected selectables!: Family;\r\n\r\n    public onAttach(engine: Engine): void {\r\n        this.selectables = new FamilyBuilder(engine).include(SelectableComponent).build();\r\n    }\r\n\r\n    public update(engine: Engine, delta: number): void {\r\n    }\r\n\r\n    public onInputEvent(type: string, event: Event): void {\r\n        if (type === 'rightclick') {\r\n            this.onRightClick(event as WorldMouseEvent);\r\n        }\r\n    }\r\n\r\n    protected onRightClick(event: WorldMouseEvent) {\r\n        let lead: Entity | null = null;\r\n\r\n        this.selectables.entities.forEach((entity: Entity) => {\r\n            const selectable = entity.getComponent(SelectableComponent);\r\n\r\n            if (selectable.isSelected()) {\r\n                if (entity.hasComponent(FlightComputerComponent)) {\r\n\r\n                    const target = new Vector3().copy(event.intersect);\r\n\r\n                    if (!lead) {\r\n                        lead = entity;\r\n                    } else {\r\n                        // Add vector between this entity and lead to target to maintain formation\r\n                        const position     = entity.getComponent(PositionComponent).getPosition();\r\n                        const leadPosition = lead.getComponent(PositionComponent).getPosition();\r\n\r\n                        const offset = position.sub(leadPosition);\r\n                        target.add(offset);\r\n                    }\r\n\r\n                    const flightComputer = entity.getComponent(FlightComputerComponent);\r\n                    flightComputer.setTarget(target);\r\n\r\n                    const geometry = new SphereGeometry(0.1);\r\n                    const material = new MeshBasicMaterial({color: 0xff0000});\r\n                    const mesh     = new Mesh(geometry, material);\r\n\r\n                    mesh.position.copy(event.intersect);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\nexport {ShipMovementControlSystem};\r\n","import {Engine, Entity, Family, FamilyBuilder, System} from '@nova-engine/ecs';\r\nimport {FlightComputerComponent} from '@/engine/components/ship/flightComputerComponent';\r\n\r\nclass FlightComputerProcessorSystem extends System {\r\n\r\n    protected flightComputerFamily?: Family;\r\n\r\n    public onAttach(engine: Engine): void {\r\n        this.flightComputerFamily = new FamilyBuilder(engine).include(FlightComputerComponent).build();\r\n    }\r\n\r\n    public update(engine: Engine, delta: number): void {\r\n        if (this.flightComputerFamily) {\r\n            this.flightComputerFamily.entities.forEach((entity: Entity) => {\r\n                entity.getComponent(FlightComputerComponent).update(delta);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport {FlightComputerProcessorSystem};\r\n","import {Engine} from '@nova-engine/ecs';\r\n\r\nlet engine = new Engine();\r\n\r\nlet resetEngine = () => {\r\n    engine = new Engine();\r\n};\r\n\r\nexport {engine, resetEngine};\r\n","import {Raycaster, Vector2, Vector3} from 'three';\r\n\r\nclass WorldMouseEvent extends Event {\r\n\r\n    constructor(type: string,\r\n                protected _button: number,\r\n                protected _position: Vector2,\r\n                protected _intersect: Vector3,\r\n                protected _raycaster: Raycaster,\r\n    ) {\r\n        super(type);\r\n    }\r\n\r\n    get raycaster(): Raycaster {\r\n        return this._raycaster;\r\n    }\r\n\r\n    public get position(): Vector2 {\r\n        return this._position;\r\n    }\r\n\r\n    public get intersect(): Vector3 {\r\n        return this._intersect;\r\n    }\r\n\r\n    get button(): number {\r\n        return this._button;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport {WorldMouseEvent};\r\n","import {Engine, System} from '@nova-engine/ecs';\r\nimport {Camera, Plane, Raycaster, Vector2, Vector3} from 'three';\r\nimport {InputEventListener} from '@/engine/systems/input/inputEventListener';\r\nimport {WorldMouseEvent} from '@/engine/systems/input/WorldMouseEvent';\r\n\r\nclass UserInputSystem extends System {\r\n\r\n    public get planeIntersectionPoint(): Vector3 {\r\n        return this._planeIntersectionPoint;\r\n    }\r\n\r\n    public set planeIntersectionPoint(value: Vector3) {\r\n        this._planeIntersectionPoint = value;\r\n    }\r\n\r\n    public get centerPlaneIntersectionPoint(): Vector3 {\r\n        return this._centerPlaneIntersectionPoint;\r\n    }\r\n\r\n    public set centerPlaneIntersectionPoint(value: Vector3) {\r\n        this._centerPlaneIntersectionPoint = value;\r\n    }\r\n\r\n    protected plane = new Plane(new Vector3(0.0, 1.0, 0.0), 0);\r\n\r\n    protected mouse                                = new Vector2();\r\n    protected raycaster                            = new Raycaster();\r\n    protected eventListeners: InputEventListener[] = [];\r\n\r\n    protected keymap: Record<string, boolean>   = {};\r\n    protected mousemap: Record<number, boolean> = {};\r\n\r\n    private _planeIntersectionPoint = new Vector3();\r\n\r\n    private _centerPlaneIntersectionPoint = new Vector3();\r\n\r\n    constructor(protected camera: Camera) {\r\n        super();\r\n\r\n        window.addEventListener('contextmenu', (event: MouseEvent) => this.onRightClick(event));\r\n        window.addEventListener('click', (event: MouseEvent) => this.onClick(event));\r\n        window.addEventListener('mousemove', (event: MouseEvent) => this.onMouseMove(event));\r\n        window.addEventListener('wheel', (event: WheelEvent) => this.onWheelEvent(event));\r\n\r\n        window.addEventListener('mousedown', (event: MouseEvent) => this.onMouseDown(event));\r\n        window.addEventListener('mouseup', (event: MouseEvent) => this.onMouseUp(event));\r\n\r\n        window.addEventListener('keydown', (event: KeyboardEvent) => this.onKeyDown(event));\r\n        window.addEventListener('keyup', (event: KeyboardEvent) => this.onKeyUp(event));\r\n\r\n        window.onblur = () => {\r\n            for (const key in this.keymap) {\r\n                if (this.keymap.hasOwnProperty(key)) {\r\n                    this.keymap[key] = false;\r\n                }\r\n            }\r\n        };\r\n\r\n        window.oncontextmenu = () => {\r\n            for (const key in this.keymap) {\r\n                if (this.keymap.hasOwnProperty(key)) {\r\n                    this.keymap[key] = false;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    public addEventListener(listener: InputEventListener): void {\r\n        this.eventListeners.push(listener);\r\n    }\r\n\r\n    public update(engine: Engine, delta: number): void {\r\n\r\n    }\r\n\r\n    public isKeyPressed(key: string): boolean {\r\n        key = key.toLowerCase();\r\n\r\n        if (key in this.keymap) {\r\n            return this.keymap[key];\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public isMousePressed(mouse: number): boolean {\r\n        if (mouse in this.mousemap) {\r\n            return this.mousemap[mouse];\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected onKeyUp(event: KeyboardEvent): void {\r\n        const key = event.key.toLowerCase();\r\n\r\n        this.keymap[key] = false;\r\n\r\n        this.dispatch('keyup', event);\r\n    }\r\n\r\n    protected onKeyDown(event: KeyboardEvent): void {\r\n        const key = event.key.toLowerCase();\r\n\r\n        this.keymap[key] = true;\r\n\r\n        this.dispatch('keydown', event);\r\n    }\r\n\r\n    protected onMouseDown(event: MouseEvent): void {\r\n        this.recalculatePlaneIntersections();\r\n        this.mousemap[event.button] = true;\r\n\r\n        const worldMouseEvent = new WorldMouseEvent('mousedown',\r\n                                                    event.button,\r\n                                                    this.mouse,\r\n                                                    this._planeIntersectionPoint,\r\n                                                    this.raycaster);\r\n        this.dispatch('mousedown', worldMouseEvent);\r\n    }\r\n\r\n    protected onMouseUp(event: MouseEvent): void {\r\n        event.preventDefault();\r\n        this.recalculatePlaneIntersections();\r\n\r\n        this.mousemap[event.button] = false;\r\n\r\n        const worldMouseEvent = new WorldMouseEvent('mouseup',\r\n                                                    event.button,\r\n                                                    this.mouse,\r\n                                                    this._planeIntersectionPoint,\r\n                                                    this.raycaster);\r\n\r\n        this.dispatch('mouseup', worldMouseEvent);\r\n    }\r\n\r\n    protected onMouseMove(event: MouseEvent): void {\r\n        event.preventDefault();\r\n\r\n        this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n        this.mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n\r\n        this.dispatch('mousemove', event);\r\n    }\r\n\r\n    protected onRightClick(event: MouseEvent): void {\r\n        // if (!event.composedPath().map((x: any) => x.id).includes('renderer')) {\r\n        //     return;\r\n        // }\r\n\r\n        event.preventDefault();\r\n\r\n        this.recalculatePlaneIntersections();\r\n\r\n        const worldMouseEvent = new WorldMouseEvent('rightclick',\r\n                                                    event.button,\r\n                                                    this.mouse,\r\n                                                    this._planeIntersectionPoint,\r\n                                                    this.raycaster);\r\n\r\n        this.dispatch('rightclick', worldMouseEvent);\r\n    }\r\n\r\n    protected onClick(event: MouseEvent): void {\r\n        // // This requires a polyfill on Edge/IE\r\n        // if (!event.composedPath().map((x: any) => x.id).includes('renderer')) {\r\n        //     return;\r\n        // }\r\n\r\n        this.recalculatePlaneIntersections();\r\n\r\n        const worldMouseEvent = new WorldMouseEvent('click',\r\n                                                    event.button,\r\n                                                    this.mouse,\r\n                                                    this._planeIntersectionPoint,\r\n                                                    this.raycaster);\r\n\r\n        this.dispatch('click', worldMouseEvent);\r\n    }\r\n\r\n    protected onWheelEvent(event: WheelEvent): void {\r\n        this.recalculatePlaneIntersections();\r\n\r\n        this.dispatch('wheel', event);\r\n    }\r\n\r\n\r\n    protected dispatch(type: string, event: Event): void {\r\n        this.eventListeners.forEach((eventListener: InputEventListener) => {\r\n            eventListener.onInputEvent(type, event);\r\n        });\r\n    }\r\n\r\n    protected recalculatePlaneIntersections() {\r\n        this.raycaster.setFromCamera(new Vector2(0, 0), this.camera);\r\n        this.raycaster.ray.intersectPlane(this.plane, this._centerPlaneIntersectionPoint);\r\n\r\n        this.raycaster.setFromCamera(this.mouse, this.camera);\r\n        this.raycaster.ray.intersectPlane(this.plane, this._planeIntersectionPoint);\r\n    }\r\n}\r\n\r\nexport {UserInputSystem};\r\n","import {Engine, Entity, Family, FamilyBuilder, System} from '@nova-engine/ecs';\r\nimport {LoadoutComponent} from '@/engine/components/ship/LoadoutComponent';\r\nimport {Ship} from '@/engine/entities/ship';\r\nimport {PositionComponent} from '@/engine/components/world/positionComponent';\r\nimport {LaserWeapon} from '@/engine/class/laserWeapon';\r\n\r\nclass AutomatedFiringSystem extends System {\r\n    protected loadoutFamily!: Family;\r\n\r\n    protected readonly targetTeams: Record<number, number[]> = {\r\n        1: [2],\r\n        2: [1, 3],\r\n        3: [],\r\n    };\r\n\r\n    public onAttach(engine: Engine): void {\r\n        this.loadoutFamily = new FamilyBuilder(engine).include(LoadoutComponent).build();\r\n    }\r\n\r\n    public update(engine: Engine, delta: number): void {\r\n        // TODO: Look at spacial partitioning\r\n        this.loadoutFamily.entities.forEach((entity: Entity) => {\r\n            if (entity instanceof Ship) {\r\n                this.loadoutFamily.entities.forEach((target: Entity) => {\r\n                    if (target instanceof Ship) {\r\n                        if (this.targetTeams[entity.team].includes(target.team)) {\r\n                            this.fireWeapons(engine, entity, target);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    protected fireWeapons(engine: Engine, attacker: Entity, defender: Entity) {\r\n        const loadout = attacker.getComponent(LoadoutComponent);\r\n        loadout.weapons.forEach((weapon: LaserWeapon) => {\r\n            if (weapon.canFire()) {\r\n                const defenderPosition = defender.getComponent(PositionComponent).getPosition();\r\n                const attackerPosition = attacker.getComponent(PositionComponent).getPosition();\r\n\r\n                if (attackerPosition.distanceToSquared(defenderPosition) < (weapon.range * weapon.range)) {\r\n                    weapon.fire(attacker, defender);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n}\r\n\r\nexport {AutomatedFiringSystem};\r\n","import {Entity} from '@nova-engine/ecs';\r\n\r\nclass LaserBeam extends Entity {\r\n    protected firedAt: number  = Date.now();\r\n    protected lifetime: number = 100;\r\n\r\n    public isExpired(): boolean {\r\n        return Date.now() - this.firedAt > this.lifetime;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport {LaserBeam};\r\n","import {Vector3} from 'three';\r\nimport {LineGeometry} from 'three/examples/jsm/lines/LineGeometry';\r\nimport {LineMaterialFactory} from '@/engine/factories/material/lineMaterialFactory';\r\nimport {Line2} from 'three/examples/jsm/lines/Line2';\r\nimport {LaserBeam} from '@/engine/entities/weapon/laserBeam';\r\nimport {PositionComponent} from '@/engine/components/world/positionComponent';\r\nimport {BloomRenderComponent} from '@/engine/components/render/bloomRenderComponent';\r\n\r\nclass LaserBeamInstanceFactory {\r\n\r\n    public static create(source: Vector3, destination: Vector3, colour: number): LaserBeam {\r\n        const geometry = new LineGeometry();\r\n\r\n        geometry.setPositions([source.x, source.y, source.z, destination.x, destination.y, destination.z]);\r\n\r\n        const material = LineMaterialFactory.buildSolidMaterial(colour, 5);\r\n        const line     = new Line2(geometry, material);\r\n\r\n        const entity = new LaserBeam();\r\n\r\n        entity.putComponent(PositionComponent);\r\n        entity.putComponent(BloomRenderComponent).mesh = line;\r\n\r\n        return entity;\r\n    }\r\n}\r\n\r\nexport {LaserBeamInstanceFactory};\r\n","import {Engine, System} from '@nova-engine/ecs';\r\nimport {EventBus} from '@/eventBus';\r\nimport {LaserBeamInstanceFactory} from '@/engine/factories/weapon/instance/laserBeamInstanceFactory';\r\nimport {LaserFiredEvent} from '@/events/weapon/laserFiredEvent';\r\nimport {LaserBeam} from '@/engine/entities/weapon/laserBeam';\r\n\r\nclass LaserHandlingSystem extends System {\r\n    protected laserBeams: LaserBeam[] = [];\r\n\r\n    public onAttach(engine: Engine): void {\r\n        EventBus.$on('laser-fired', (event: LaserFiredEvent) => {\r\n            const entity = LaserBeamInstanceFactory.create(event.source, event.destination, event.colour);\r\n\r\n            this.laserBeams.push(entity);\r\n            engine.addEntity(entity);\r\n        });\r\n    }\r\n\r\n    public update(engine: Engine, delta: number): void {\r\n        this.laserBeams.forEach((laser) => {\r\n            if (laser.isExpired()) {\r\n                engine.removeEntity(laser);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport {LaserHandlingSystem};\r\n","import {Engine, Family, FamilyBuilder, System} from '@nova-engine/ecs';\r\nimport {HealthComponent} from '@/engine/components/ship/healthComponent';\r\n\r\nclass HealthMonitoringSystem extends System {\r\n    protected family!: Family;\r\n\r\n    public onAttach(engine: Engine): void {\r\n        this.family = new FamilyBuilder(engine).include(HealthComponent).build();\r\n    }\r\n\r\n    public update(engine: Engine, delta: number): void {\r\n        this.family.entities.forEach((entity) => {\r\n            const healthComponent = entity.getComponent(HealthComponent);\r\n\r\n            if (healthComponent.hull < 0) {\r\n                engine.removeEntity(entity);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport {HealthMonitoringSystem};\r\n","import {RepeatWrapping, Texture, TextureLoader} from 'three';\r\n\r\nclass BackgroundSpriteFactory {\r\n\r\n\r\n    public static createBackgroundSprite(textureName: string): Texture {\r\n\r\n        const bgTexture = new TextureLoader().load(textureName);\r\n\r\n        bgTexture.wrapS = RepeatWrapping;\r\n        bgTexture.wrapT = RepeatWrapping;\r\n\r\n        bgTexture.repeat.x = 1.2;\r\n        bgTexture.repeat.y = 1.2;\r\n\r\n        return bgTexture;\r\n    }\r\n}\r\n\r\nexport {BackgroundSpriteFactory};\r\n","\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Vue} from 'vue-property-decorator';\nimport {Renderer} from '@/engine/renderer';\nimport {Engine} from '@nova-engine/ecs';\nimport {ShipFactory} from '@/engine/factories/shipFactory';\nimport {VelocityApplicationSystem} from '@/engine/systems/velocityApplicationSystem';\nimport {PositionComponent} from '@/engine/components/world/positionComponent';\nimport ShaderLoader from '@/components/shaders/ShaderLoader.vue';\nimport {StarFactory} from '@/engine/factories/starFactory';\nimport {Clock, Mesh, SphereGeometry, Vector3} from 'three';\nimport {CircleGeometryFactory} from '@/engine/factories/geometry/circleGeometryFactory';\nimport {CameraControlSystem} from '@/engine/systems/cameraControlSystem';\nimport {EntitySelectionSystem} from '@/engine/systems/entitySelectionSystem';\nimport {ShipMovementControlSystem} from '@/engine/systems/shipMovementControlSystem';\nimport {FlightComputerProcessorSystem} from '@/engine/systems/flightComputerProcessorSystem';\nimport {engine, resetEngine} from '@/engine';\nimport {UserInputSystem} from '@/engine/systems/userInputSystem';\nimport {LineMaterialFactory} from '@/engine/factories/material/lineMaterialFactory';\nimport {Line2} from 'three/examples/jsm/lines/Line2';\nimport {AU, solOrbitDistances, sunRadius} from '@/engine/scalingHelper';\nimport {FlightComputerComponent} from '@/engine/components/ship/flightComputerComponent';\nimport {AutomatedFiringSystem} from '@/engine/systems/automatedFiringSystem';\nimport {LaserHandlingSystem} from '@/engine/systems/combat/weapons/laserHandlingSystem';\nimport {HealthMonitoringSystem} from '@/engine/systems/combat/healthMonitoringSystem';\nimport {BackgroundSpriteFactory} from '@/engine/factories/sprite/backgroundSpriteFactory';\nimport {TypedArrayUtils} from 'three/examples/jsm/utils/TypedArrayUtils';\nimport size = TypedArrayUtils.Kdtree.BinaryHeap.size;\n\n@Component({\n               components: {ShaderLoader}\n           })\nexport default class App extends Vue {\n    renderer!: Renderer;\n    engine!: Engine;\n\n    public mounted() {\n        const element = document.getElementById('renderer');\n\n        if (!element) {\n            throw new Error('Could not find render element');\n        }\n\n        this.engine   = engine;\n        this.renderer = new Renderer(element);\n\n        this.engine.addSystem(this.renderer);\n        this.engine.addSystem(new VelocityApplicationSystem());\n\n        const shipFactory = new ShipFactory(this.renderer, this.engine);\n\n        for (let i = 0; i < 10; i++) {\n            for (let y = 0; y < 10; y++) {\n                const type = (['battlecruiser', 'battleship', 'destroyer'])[Math.floor(Math.random() * 3)];\n\n                const ship = shipFactory.createShip(1, type);\n                engine.addEntity(ship);\n                ship.getComponent(PositionComponent).setPosition(new Vector3(15 + (i * 2), (Math.random() * 10) - 5, y * 2));\n            }\n        }\n\n        for (let i = 0; i < 50; i++) {\n            const type = (['battlecruiser', 'battleship', 'destroyer'])[Math.floor(Math.random() * 3)];\n\n            const ship = shipFactory.createShip(2, type);\n            engine.addEntity(ship);\n\n            ship.getComponent(PositionComponent).setPosition(new Vector3(-20 + i + Math.random() * 20, (Math.random() * 10.0) - 5, 100 + Math.random() * 20.0));\n\n            // ship.getComponent(FlightComputerComponent).setTarget(new Vector3(10000, 0, 10000));\n\n        }\n\n        for (let i = 0; i < 50; i++) {\n            const type = (['battlecruiser', 'battleship', 'destroyer'])[Math.floor(Math.random() * 3)];\n\n            const ship = shipFactory.createShip(3, type);\n            engine.addEntity(ship);\n\n            ship.getComponent(PositionComponent).setPosition(new Vector3(100 + i + Math.random() * 20, (Math.random() * 10.0) - 5, 100 + Math.random() * 20.0));\n\n            ship.getComponent(FlightComputerComponent).setTarget(new Vector3(10000, 0, 10000));\n        }\n\n        (new StarFactory(this.renderer, this.engine)).createStar(sunRadius);\n\n        const circleFactory = new CircleGeometryFactory();\n\n        Object.values(solOrbitDistances).forEach((radius: number) => {\n            const geo      = CircleGeometryFactory.createCircleGeometry(radius, 100);\n            const material = LineMaterialFactory.buildDottedMaterial(0xFFFFFF, 5);\n            this.renderer.getScene().add(new Line2(geo, material));\n        });\n\n        const inputSystem = new UserInputSystem(this.renderer.getCamera());\n        this.engine.addSystem(inputSystem);\n\n        console.log(this.renderer.getRenderer().domElement);\n        const entitySelectionSystem = new EntitySelectionSystem(this.renderer.getScene(),\n                                                                this.renderer.getCamera(),\n                                                                this.renderer.getRenderer(),\n                                                                inputSystem);\n        this.engine.addSystem(entitySelectionSystem);\n        inputSystem.addEventListener(entitySelectionSystem);\n\n        this.engine.addSystem(new AutomatedFiringSystem());\n\n        const shipMovementControlSystem = new ShipMovementControlSystem();\n        this.engine.addSystem(shipMovementControlSystem);\n        inputSystem.addEventListener(shipMovementControlSystem);\n\n        this.engine.addSystem(new FlightComputerProcessorSystem());\n\n        const cameraControl = new CameraControlSystem(this.renderer.getCamera(), inputSystem);\n        inputSystem.addEventListener(cameraControl);\n\n        const laserHandlingSystem = new LaserHandlingSystem();\n        this.engine.addSystem(laserHandlingSystem);\n\n        const healthMonitoringSystem = new HealthMonitoringSystem();\n        this.engine.addSystem(healthMonitoringSystem);\n\n        this.engine.addSystem(cameraControl);\n        const starBackground = BackgroundSpriteFactory.createBackgroundSprite('textures/stars.png');\n\n        this.renderer.getStarScene().background = starBackground;\n\n        const earthRadius = 0.0000425875 * AU;\n        const mesh        = new Mesh(new SphereGeometry(earthRadius, 30, 30, 1));\n        mesh.position.add(new Vector3(10, 10, 10));\n        this.renderer.getStarScene().add(mesh);\n\n\n        const clock   = new Clock;\n        const animate = () => {\n\n            this.engine.update(clock.getDelta());\n            requestAnimationFrame(animate);\n        };\n        animate();\n    }\n\n    public beforeDestroy() {\n        console.log('destroy');\n        this.engine.removeSystems(this.engine._systems);\n\n        resetEngine();\n    }\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=675b7150&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VApp } from 'vuetify/lib/components/VApp';\ninstallComponents(component, {VApp})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-row',[_c('v-spacer'),_c('v-spacer'),_c('v-spacer'),_c('v-spacer')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Vue} from 'vue-property-decorator';\nimport {engine} from '@/engine';\nimport {EngineEntityListener, Entity} from '@nova-engine/ecs';\nimport {SelectableComponent} from '@/engine/components/selection/selectableComponent';\n\n@Component\nexport default class Overview extends Vue {\n    protected entities: Array<Entity> = [];\n\n    // created() {\n    //     console.log('created');\n    //\n    //     engine.entities.forEach((entity: Entity) => {\n    //         this.entities.push(entity);\n    //     });\n    //     engine.addEntityListener(this);\n    //\n    // }\n\n    // get selectables() {\n    //     return this.entities.filter((entity: Entity) => {\n    //         return entity.hasComponent(SelectableComponent);\n    //     });\n    // }\n    //\n    // get selected() {\n    //     return this.selectables.filter((entity: Entity) => {\n    //         return entity.getComponent(SelectableComponent).isSelected();\n    //     });\n    // }\n    //\n    // onEntityAdded(entity: Entity): void {\n    //     console.log('onEntityAdded');\n    //     this.entities.push(entity);\n    // }\n    //\n    // onEntityRemoved(entity: Entity): void {\n    //     const index = this.entities.findIndex(x => x === entity);\n    //     if (index !== -1) {\n    //         this.entities.splice(index);\n    //     }\n    // }\n\n\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Overview.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Overview.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Overview.vue?vue&type=template&id=c31b5a60&scoped=true&\"\nimport script from \"./Overview.vue?vue&type=script&lang=ts&\"\nexport * from \"./Overview.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c31b5a60\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VRow,VSpacer})\n","import Vue from 'vue'\nimport Router from 'vue-router'\nimport Overview from '@/components/Overview.vue'\n\nVue.use(Router)\n\nexport default new Router({\n    mode: 'history',\n    base: process.env.BASE_URL,\n    routes: [\n        {\n            path: '/',\n            name: 'overview',\n            component: Overview,\n        },\n    ],\n})\n","import Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n    state: {\n        selectedShips: []\n    },\n    mutations: {},\n    actions: {},\n    getters: {\n        selectedShips: (state) => state.selectedShips\n    }\n});\n","/* tslint:disable:no-console */\n\nimport {register} from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n    register(`${process.env.BASE_URL}service-worker.js`, {\n        ready() {\n            console.log(\n                'App is being served from cache by a service worker.\\n' +\n                'For more details, visit https://goo.gl/AFskqB',\n            )\n        },\n        registered() {\n            console.log('Service worker has been registered.')\n        },\n        cached() {\n            console.log('Content has been cached for offline use.')\n        },\n        updatefound() {\n            console.log('New content is downloading.')\n        },\n        updated() {\n            console.log('New content is available; please refresh.')\n        },\n        offline() {\n            console.log('No internet connection found. App is running in offline mode.')\n        },\n        error(error) {\n            console.error('Error during service worker registration:', error)\n        },\n    })\n}\n","import Vue from 'vue';\nimport Vuetify from 'vuetify/lib';\n\nVue.use(Vuetify);\n\nexport default new Vuetify({\n  icons: {\n    iconfont: 'mdi',\n  },\n});\n","import Vue from 'vue';\r\nimport App from './App.vue';\r\nimport router from './router';\r\nimport store from './store';\r\nimport './registerServiceWorker';\r\nimport vuetify from './plugins/vuetify';\r\n\r\nVue.config.productionTip = false;\r\n\r\n\r\nnew Vue(\r\n    {\r\n        router,\r\n        store,\r\n        vuetify,\r\n        render: (h) => h(App),\r\n        created() {\r\n            this.$vuetify.theme.dark = true;\r\n        },\r\n    }).$mount('#app');\r\n\r\n"],"sourceRoot":""}